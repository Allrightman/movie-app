{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/movies.js","components/MovieCardSearch/MovieCardSearch.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","request","url","options","fetch","then","response","ok","Error","status","statusText","json","MovieCardSearch","onAdd","onClick","FindMovie","onDelete","useState","setMovies","setTitle","titleError","setTitleError","movieRequest","searchMoviesByTitle","result","Response","moviesFromServer","Search","Title","Poster","imdbID","htmlFor","type","id","placeholder","classNames","value","onChange","target","onKeyPress","e","key","App","data","to","path","newMovie","some","currentMovies","filteredMovies","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8cee1599.chunk.js","sourcesContent":["import React from 'react';\n\nimport './MovieCard.css';\n\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({ movie }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"https://upload.wikimedia.org/wikipedia/commons/c/cc/IMDb_Logo_Square.svg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.css';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} movie={movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const MOVIES_URL = 'https://www.omdbapi.com/?apikey=384ef47d&';\n\nexport const request = (url, options) => fetch(`${MOVIES_URL}${url}`, options)\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    return response.json();\n  });\n\nexport const remove = url => request(url, { method: 'DELETE' });\n\nexport const getMovieByTitle = title => request('t=' + title);\n\nexport const getMovieById = id => request('i=' + id);\n\nexport const searchMoviesByTitle = title => request('s=' + title);\n","import React from 'react';\n\nimport './MovieCardSearch.css';\n\nimport PropTypes from 'prop-types';\nimport {FindMovie} from \"../FindMovie\";\nimport {Route} from \"react-router-dom\";\n\nexport const MovieCardSearch = ({ movie, onAdd }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"https://upload.wikimedia.org/wikipedia/commons/c/cc/IMDb_Logo_Square.svg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n\n      <button\n        onClick={() => onAdd(movie)}\n        className=\"button is-light\"\n      >\n        Add to favorite\n      </button>\n\n\n        <button\n          onClick={() => onAdd(movie)}\n          className=\"button is-light\"\n        >\n          Show details\n        </button>\n\n    </div>\n  </div>\n);\n\nMovieCardSearch.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './FindMovie.css';\nimport classNames from 'classnames';\n\nimport {getMovieByTitle, searchMoviesByTitle} from '../../api/movies';\n\nimport { MovieCard } from '../MovieCard';\nimport {MovieCardSearch} from \"../MovieCardSearch\";\n\nexport const FindMovie = ({ onAdd, onDelete }) => {\n  const [movies, setMovies] = useState([]);\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n\n  const movieRequest = () => {\n    searchMoviesByTitle(title)\n      .then((result) => {\n        if (result.Response === 'True') {\n          const moviesFromServer = result.Search.map(movie => ({\n              title: movie.Title,\n              imgUrl: movie.Poster,\n              imdbUrl: `https://www.imdb.com/title/${movie.imdbID}`,\n              imdbId: movie.imdbID,\n            }\n          ))\n         setMovies(moviesFromServer);\n        } else {\n          setTitleError(true);\n          setTitle('');\n        }\n      });\n  };\n\n  const handleTitleChange = ({ target }) => {\n    setTitle(target.value);\n    setTitleError(false);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': titleError })}\n              value={title}\n              onChange={handleTitleChange}\n              onKeyPress={(e) => {\n                if (e.key === 'Enter') {\n                  movieRequest();\n                }\n              }}\n            />\n          </div>\n\n          {titleError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={movieRequest}\n            >\n              Find a movie\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"movies\">\n        {movies && (\n          movies.map(movie => (\n            <MovieCardSearch\n              movie={movie}\n              onAdd={onAdd}\n              onDelete={onDelete}\n            />\n          ))\n        )}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport { Link, Route } from 'react-router-dom';\n\nimport './App.css';\n\nimport data from './api/movies.json';\n\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App = () => {\n  const [movieDetail, setmovieDetail] = useState(null);\n  const [movies, setMovies] = useState(data);\n\n  const addMovie = (newMovie) => {\n    if (!movies.some(({ imdbId }) => newMovie.imdbId === imdbId)) {\n      setMovies(currentMovies => [...currentMovies, newMovie]);\n    }\n  };\n\n  // const addToDetail = (imdbId) => {\n  //   if (movie) {\n  //     onAdd(movie);\n  //     setMovie(null);\n  //     setTitle('');\n  //   }\n  // };\n\n  const deleteMovie = (imdbId) => {\n    const filteredMovies = movies.filter(movie => movie.imdbId !== imdbId);\n    setMovies(filteredMovies);\n  };\n\n  return <>\n    <nav className=\"navbar\">\n      <div className=\"navbar-brand\">\n        <Link className=\"navbar-item\" to=\"/home\">\n          Home\n        </Link>\n        <Link className=\"navbar-item\" to=\"/detail\">\n          Movie detail\n        </Link>\n        <Link className=\"navbar-item\" to=\"/favorite\">\n          Favorite movies\n        </Link>\n      </div>\n    </nav>\n\n    <div className=\"page\">\n      <Route path=\"/home\">\n        <FindMovie onAdd={addMovie} onDelete={deleteMovie} />\n      </Route>\n      <Route path=\"/detail\">\n        {/*<h2 className=\"subtitle\">Movie detail</h2>*/}\n        {/*<FindMovie onAdd={addMovie} onDelete={deleteMovie} />*/}\n      </Route>\n      <Route path=\"/favorite\">\n        <div className=\"page-content\">\n          <h2 className=\"subtitle\">My favorite movies</h2>\n          <MoviesList movies={movies} />\n        </div>\n      </Route>\n    </div>\n  </>\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}